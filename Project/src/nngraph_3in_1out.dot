digraph G {
labelloc="t";
label="nngraph_3in_1out";
node [shape = oval]; 
n1[label="Node1\ninput = {}\lmodule = nn.LogSoftMax\lreverseMap = {}\lgradOutput = {Tensor[1x35]}" tooltip="[mem2.lua]:186_"];
n2[label="Node2\ninput = {}\lreverseMap = {}\lgradOutput = {Tensor[1x35]}" tooltip="[[C]]:-1_"];
n3[label="Node3\ninput = {}\lmodule = nn.Linear(50 -> 35) without bias\lreverseMap = {}\lgradOutput = {Tensor[1x35]NaN}" tooltip="[mem2.lua]:186_"];
n4[label="Node4\ninput = {}\lmapindex = {Node5,Node6}\lmodule = nn.CAddTable\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:180_"];
n5[label="Node5\ninput = {}\lmapindex = {Node7,Node8}\lmodule = nn.MM\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:177_"];
n6[label="Node6\ninput = {}\lmodule = nn.Linear(50 -> 50) without bias\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:180_"];
n7[label="Node7\ninput = {}\lmodule = nn.SoftMax\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:176_"];
n8[label="Node8\ngradOutputBuffer = Tensor[50x50]NaN\linput = {}\lmapindex = {Node11,Node12}\lmodule = nn.CAddTable\lreverseMap = {}\lgradOutput = {Tensor[50x50]NaN,Tensor[50x50]NaN,Tensor[50x50]NaN}" tooltip="[mem2.lua]:169_"];
n9[label="Node9\ngradOutputBuffer = Tensor[1x50]NaN\linput = {}\lmapindex = {Node13,Node14}\lmodule = nn.CAddTable\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN,Tensor[1x50]NaN}" tooltip="[mem2.lua]:180_"];
n10[label="Node10\ninput = {}\lmapindex = {Node9,Node15}\lmodule = nn.MM\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:176_"];
n11[label="Node11\ninput = {}\lmodule = nn.Sum\lreverseMap = {}\lgradOutput = {Tensor[50x50]NaN}" tooltip="[mem2.lua]:169_"];
n12[label="Node12\ninput = {}\lmodule = nn.LookupTable\lreverseMap = {}\lgradOutput = {Tensor[50x50]NaN}" tooltip="[mem2.lua]:169_"];
n13[label="Node13\ninput = {}\lmapindex = {Node18,Node8}\lmodule = nn.MM\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:177_"];
n14[label="Node14\ninput = {}\lmodule = nn.Linear(50 -> 50) without bias\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:180_"];
n15[label="Node15\ngradOutputBuffer = Tensor[50x50]NaN\linput = {}\lmapindex = {Node20,Node21}\lmodule = nn.CAddTable\lreverseMap = {}\lgradOutput = {Tensor[50x50]NaN,Tensor[50x50]NaN,Tensor[50x50]NaN}" tooltip="[mem2.lua]:168_"];
n16[label="Node16\ninput = {Tensor[50x11]}\lmodule = nn.LookupTable\lreverseMap = {}\lgradOutput = {Tensor[50x11x50]NaN}" tooltip="[mem2.lua]:169_"];
n17[label="Node17\ngradOutputBuffer = torch.LongTensor[50]\linput = {}\lmodule = nn.Identity\lreverseMap = {}\lgradOutput = {torch.LongTensor[50],torch.LongTensor[50]}" tooltip="[mem2.lua]:157_"];
n18[label="Node18\ninput = {}\lmodule = nn.SoftMax\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:176_"];
n19[label="Node19\ngradOutputBuffer = Tensor[1x50]NaN\linput = {}\lmapindex = {Node25,Node26}\lmodule = nn.CAddTable\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN,Tensor[1x50]NaN}" tooltip="[mem2.lua]:180_"];
n20[label="Node20\ninput = {}\lmodule = nn.Sum\lreverseMap = {}\lgradOutput = {Tensor[50x50]NaN}" tooltip="[mem2.lua]:168_"];
n21[label="Node21\ninput = {}\lmodule = nn.LookupTable\lreverseMap = {}\lgradOutput = {Tensor[50x50]NaN}" tooltip="[mem2.lua]:168_"];
n22[label="Node22\ngradOutputBuffer = Tensor[50x11]\linput = {Tensor[50x11]}\lmodule = nn.Identity\lreverseMap = {}\lgradOutput = {Tensor[50x11],Tensor[50x11]}" tooltip="[mem2.lua]:155_"];
n23[label="Node23\ninput = {{Tensor[50x11],Tensor[11],torch.LongTensor[50]}}\lreverseMap = {}\lselectindex = 3\lgradOutput = {torch.LongTensor[50]}" tooltip="[[C]]:-1_-3"];
n24[label="Node24\ninput = {}\lmapindex = {Node19,Node15}\lmodule = nn.MM\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:176_"];
n25[label="Node25\ninput = {}\lmapindex = {Node30,Node8}\lmodule = nn.MM\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:177_"];
n26[label="Node26\ninput = {Tensor[1x50]NaN}\lmodule = nn.Linear(50 -> 50) without bias\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:180_"];
n27[label="Node27\ninput = {Tensor[50x11]}\lmodule = nn.LookupTable\lreverseMap = {}\lgradOutput = {Tensor[50x11x50]NaN}" tooltip="[mem2.lua]:168_"];
n28[label="Node28\ninput = {{Tensor[50x11],Tensor[11],torch.LongTensor[50]}}\lreverseMap = {}\lselectindex = 1\lgradOutput = {Tensor[50x11]}" tooltip="[[C]]:-1_-1"];
n29[label="Node29\ninput = {{Tensor[50x11],Tensor[11],torch.LongTensor[50]}}\lreverseMap = {}\lnSplitOutputs = 3\lgradOutput = {{Tensor[50x11],Tensor[11],torch.LongTensor[50]}}" tooltip="[[C]]:-1_ split at [...gileaudi/torch/install/share/lua/5.1/nngraph/gmodule.lua]:96-mnode"];
n30[label="Node30\ninput = {}\lmodule = nn.SoftMax\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:176_"];
n31[label="Node31\ngradOutputBuffer = Tensor[1x50]NaN\linput = {Tensor[50]NaN}\lmodule = nn.View(1, 50)\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN,Tensor[1x50]NaN}" tooltip="[mem2.lua]:167_"];
n32[label="Node32\ninput = {Tensor[50x11],Tensor[11],torch.LongTensor[50]}\lreverseMap = {}\lgradOutput = {{Tensor[50x11],Tensor[11],torch.LongTensor[50]}}" tooltip="[[C]]:-1_"];
n33[label="Node33\ninput = {Tensor[1x50]NaN}\lmapindex = {Node31,Node15}\lmodule = nn.MM\lreverseMap = {}\lgradOutput = {Tensor[1x50]NaN}" tooltip="[mem2.lua]:176_"];
n34[label="Node34\ninput = {Tensor[11x50]NaN}\lmodule = nn.Sum\lreverseMap = {}\lgradOutput = {Tensor[50]NaN}" tooltip="[mem2.lua]:167_"];
n35[label="Node35\ninput = {Tensor[11]}\lmodule = nn.LookupTable\lreverseMap = {}\lgradOutput = {Tensor[11x50]NaN}" tooltip="[mem2.lua]:167_"];
n36[label="Node36\ninput = {Tensor[11]}\lmodule = nn.Identity\lreverseMap = {}\lgradOutput = {Tensor[11]}" tooltip="[mem2.lua]:156_"];
n37[label="Node37\ninput = {{Tensor[50x11],Tensor[11],torch.LongTensor[50]}}\lreverseMap = {}\lselectindex = 2\lgradOutput = {Tensor[11]}" tooltip="[[C]]:-1_-2"];
n1 -> n2;
n3 -> n1;
n4 -> n3;
n5 -> n4;
n6 -> n4;
n7 -> n5;
n8 -> n5;
n9 -> n6;
n10 -> n7;
n11 -> n8;
n12 -> n8;
n13 -> n9;
n14 -> n9;
n9 -> n10;
n15 -> n10;
n16 -> n11;
n17 -> n12;
n18 -> n13;
n8 -> n13;
n19 -> n14;
n20 -> n15;
n21 -> n15;
n22 -> n16;
n23 -> n17;
n24 -> n18;
n25 -> n19;
n26 -> n19;
n27 -> n20;
n17 -> n21;
n28 -> n22;
n29 -> n23;
n19 -> n24;
n15 -> n24;
n30 -> n25;
n8 -> n25;
n31 -> n26;
n22 -> n27;
n29 -> n28;
n32 -> n29;
n33 -> n30;
n34 -> n31;
n31 -> n33;
n15 -> n33;
n35 -> n34;
n36 -> n35;
n37 -> n36;
n29 -> n37;
n27[style=filled, fillcolor=red];
}